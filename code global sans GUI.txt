package application;

import java.util.Date;

public class Consultation {
	private Date date;
    private String observation;
    private String ordonnance;
    private String certificatMedical;

    public Consultation(Date date, String observation, String ordonnance, String certificatMedical) {
        this.date = date;
        this.observation = observation;
        this.ordonnance = ordonnance;
        this.certificatMedical = certificatMedical;
    }

    
    public Date getDate() {
        return date;
    }

    public String getObservation() {
        return observation;
    }

    public String getOrdonnance() {
        return ordonnance;
    }
    public String getCertificatMedical() {
        return certificatMedical;
    }
}
package application;

import java.util.ArrayList;

public class DossierMedical {
	  private Patient patient;
	    private ArrayList<Consultation> consultations;

	    public DossierMedical(Patient patient, ArrayList<Consultation> consultations) {
	        this.patient = patient;
	        this.consultations = consultations;
	    }

	    public void ajouterConsultation(Consultation consultation) {
	        consultations.add(consultation);
	    }

	    
	    public Patient getPatient() {
	        return patient;
	    }

	    public ArrayList<Consultation> getConsultations() {
	        return consultations;
	    }
	    public void afficherDossierMedical() {
	        System.out.println("Dossier médical de " + patient.getNom() + " " + patient.getPrenom());
	        for (Consultation consultation : consultations) {
	            System.out.println("Date : " + consultation.getDate());
	            System.out.println("Observation : " + consultation.getObservation());
	            System.out.println("Ordonnance : " + consultation.getOrdonnance());
	            System.out.println("Certificat médical : " + consultation.getCertificatMedical());
	            System.out.println("-------------------");
	        } 
}}
package application;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;

public class GestionCabinetMedical {
	 private ArrayList<Patient> patients;
	    private ArrayList<DossierMedical> dossiersMedicaux;
	    private ArrayList<RendezVous> rendezVous;
	    private Scanner scanner;
	    private SimpleDateFormat dateFormat;

	    public GestionCabinetMedical() {
	        this.patients = new ArrayList<>();
	        this.dossiersMedicaux = new ArrayList<>();
	        this.rendezVous = new ArrayList<>();
	        this.scanner = new Scanner(System.in);
	        this.dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm");
	    }

	  

	        public void ajouterPatient() {
	            System.out.println("Entrez le nom du patient :");
	            String nom = scanner.nextLine();
	            System.out.println("Entrez le prénom du patient :");
	            String prenom = scanner.nextLine();
	            System.out.println("Entrez le numéro de téléphone du patient :");
	            String telephone = scanner.nextLine();
	            System.out.println("Entrez les antécédents médicaux du patient (ou 'aucun') :");
	            String antecedentsMedicaux = scanner.nextLine();
	            System.out.println("Entrez les antécédents chirurgicaux du patient (ou 'aucun') :");
	            String antecedentsChirurgicaux = scanner.nextLine();
	            System.out.println("Entrez le poids du patient :");
	            double poids = Double.parseDouble(scanner.nextLine());
	            System.out.println("Entrez la taille du patient :");
	            double taille = Double.parseDouble(scanner.nextLine());
	            System.out.println("Entrez les allergies du patient (séparées par des virgules) :");
	            String[] allergiesArray = scanner.nextLine().split(",");
	            ArrayList<String> allergies = new ArrayList<>();
	            for (String allergie : allergiesArray) {
	                allergies.add(allergie.trim());
	            }
	            Patient patient = new Patient(nom, prenom, telephone, antecedentsMedicaux, antecedentsChirurgicaux, poids, taille, allergies);
	            patients.add(patient);
	            DossierMedical dossier = new DossierMedical(patient, new ArrayList<>());
	            dossiersMedicaux.add(dossier);
	            System.out.println("Patient ajouté avec succès.");
	        }

	        public Patient rechercherPatient(String nom, String prenom) {
	            for (Patient patient : patients) {
	                if (patient.getNom().equals(nom) && patient.getPrenom().equals(prenom)) {
	                    return patient;
	                }
	            }
	            return null;
	        }

	        public void mettreAjourPatient(Patient patient) {
	            int index = patients.indexOf(patient);
	            if (index != -1) {
	                patients.set(index, patient);
	            }
	        }

	        public void supprimerPatient(Patient patient) {
	            patients.remove(patient);
	        }
	        public ArrayList<Patient> rechercherPatient() {
	            return patients;
	        }
	        public void ajouterRendezVous() {
	            System.out.println("Entrez le nom du patient :");
	            String nom = scanner.nextLine();
	            System.out.println("Entrez le prénom du patient :");
	            String prenom = scanner.nextLine();

	            Patient patient = rechercherPatient(nom, prenom);
	            if (patient == null) {
	                System.out.println("Patient non trouvé.");
	                return;
	            }

	            System.out.println("Entrez la date du rendez-vous (format : dd/MM/yyyy HH:mm) :");
	            String dateStr = scanner.nextLine();
	            Date date = parseDate(dateStr);
	            if (date == null) {
	                System.out.println("Format de date invalide.");
	                return;
	            }
	            RendezVous rdv = new RendezVous(patient,date);  
	            rendezVous.add(rdv);
	            System.out.println("Rendez-vous ajouté avec succès.");
	        }

	        public void ajouterConsultation() {
	            System.out.println("Entrez le nom du patient :");
	            String nom = scanner.nextLine();
	            System.out.println("Entrez le prénom du patient :");
	            String prenom = scanner.nextLine();

	            Patient patient = rechercherPatient(nom, prenom);
	            if (patient == null) {
	                System.out.println("Patient non trouvé.");
	                return;
	            }

	            DossierMedical dossier = rechercherDossierMedical(patient);
	            if (dossier == null) {
	                System.out.println("Dossier médical non trouvé pour ce patient.");
	                return;
	            }

	            System.out.println("Entrez la date de la consultation (format : dd/MM/yyyy HH:mm) :");
	            String dateStr = scanner.nextLine();
	            Date date = parseDate(dateStr);
	            if (date == null) {
	                System.out.println("Format de date invalide.");
	                return;
	            }

	            System.out.println("Entrez l'observation :");
	            String observation = scanner.nextLine();
	            System.out.println("Entrez l'ordonnance :");
	            String ordonnance = scanner.nextLine();
	            System.out.println("Entrez le certificat médical (ou 'aucun') :");
	            String certificatMedical = scanner.nextLine();

	            Consultation consultation = new Consultation(date, observation, ordonnance, certificatMedical);
	            dossier.ajouterConsultation(consultation);
	            System.out.println("Consultation ajoutée avec succès.");
	        }

	        public DossierMedical rechercherDossierMedical(Patient patient) {
	            for (DossierMedical dossier : dossiersMedicaux) {
	                if (dossier.getPatient().equals(patient)) {
	                    return dossier;
	                }
	            }
	            return null;
	        }

	        public void afficherDossiersMedicaux() {
	            for (DossierMedical dossier : dossiersMedicaux) {
	                dossier.afficherDossierMedical();
	            }
	        }

	        public void afficherRendezVous() {
	            for (RendezVous rdv : rendezVous) {
	                System.out.println("Date : " + rdv.getDate());
	                System.out.println("Patient : " + rdv.getPatient().getNom() + " " + rdv.getPatient().getPrenom());
	                System.out.println("-------------------");
	            }
	        }

	        private Date parseDate(String dateStr) {
	            try {
	                return dateFormat.parse(dateStr);
	            } catch (ParseException e) {
	                return null;
	            }
	        }
	        
	        public void ajouterPatient(Patient patient) {
	            patients.add(patient);
	            dossiersMedicaux.add(new DossierMedical(patient, new ArrayList<>()));
	        }

	        public void ajouterRendezVous(RendezVous rendezVous) {
	            ajouterRendezVous(rendezVous);
	        }

	        public ObservableList<Patient> getPatients() {
	            return FXCollections.observableArrayList(patients);
	        }
}
package application;

import java.util.ArrayList;



public class Patient {
	  private String nom;
	    private String prenom;
	    private String telephone;
	    private String antecedentsMedicaux;
	    private String antecedentsChirurgicaux;
	    private double poids;
	    private double taille;
	    private ArrayList<String> allergies;
	    
	    public Patient(String nom, String prenom, String telephone, String antecedentsMedicaux, String antecedentsChirurgicaux, double poids, double taille, ArrayList<String> allergies) {
	        this.nom = nom;
	        this.prenom = prenom;
	        this.telephone = telephone;
	        this.antecedentsMedicaux = antecedentsMedicaux;
	        this.antecedentsChirurgicaux = antecedentsChirurgicaux;
	        this.poids = poids;
	        this.taille = taille;
	        this.allergies = allergies;
}  public String getNom() {
    return nom;
}

public String getPrenom() {
    return prenom;
}

public String getTelephone() {
    return telephone;
}

public String getAntecedentsMedicaux() {
    return antecedentsMedicaux;
}

public String getAntecedentsChirurgicaux() {
    return antecedentsChirurgicaux;
}

public double getPoids() {
    return poids;
}

public double getTaille() {
    return taille;
}

public ArrayList<String> getAllergies() {
    return allergies;
} 






}
package application;

import java.util.Date;

public class RendezVous {
	  private Patient patient;
	    private Date date;

	    public RendezVous(Patient patient, Date date) {
	        this.patient = patient;
	        this.date = date;
	    }

	    // Getters et setters
	    public Patient getPatient() {
	        return patient;
	    }

	    public Date getDate() {
	        return date;
	    }

		public void ajouterRendezVous(RendezVous rendezVous) {
			// TODO Auto-generated method stub
			
		}
}
package application;
import java.util.ArrayList;
import java.util.Scanner;
public class MainCode {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		 GestionCabinetMedical cabinet = new GestionCabinetMedical();
	        Scanner scanner = new Scanner(System.in);

	        while (true) {
	            System.out.println("\nQue voulez-vous faire ?");
	            System.out.println("1. Ajouter un patient");
	            System.out.println("2. Ajouter un rendez-vous");
	            System.out.println("3. Ajouter une consultation");
	            System.out.println("4. Afficher la liste des patients");
	            System.out.println("5. Afficher la liste des dossiers médicaux");
	            System.out.println("6. Afficher la liste des rendez-vous");
	            System.out.println("7. Mettre à jour un patient");
	            System.out.println("8. Supprimer un patient");
	            System.out.println("9. Quitter");
	            System.out.print("Votre choix : ");

	            int choix = scanner.nextInt();
	            scanner.nextLine(); // Consommer le caractère de fin de ligne

	            switch (choix) {
	                case 1:
	                    cabinet.ajouterPatient();
	                    break;
	                case 2:
	                    cabinet.ajouterRendezVous();
	                    break;
	                case 3:
	                    cabinet.ajouterConsultation();
	                    break;
	                case 4:
	                    afficherPatients(cabinet);
	                    break;
	                case 5:
	                    cabinet.afficherDossiersMedicaux();
	                    break;
	                case 6:
	                    cabinet.afficherRendezVous();
	                    break;
	                case 7:
	                    mettreAJourPatient(cabinet);
	                    break;
	                case 8:
	                    supprimerPatient(cabinet);
	                    break;
	                case 9:
	                    System.out.println("Au revoir !");
	                    return;
	                default:
	                    System.out.println("Choix invalide. Veuillez réessayer.");
	            }
	        }
	    }

	    private static void afficherPatients(GestionCabinetMedical cabinet) {
	        ArrayList<Patient> patients = (ArrayList<Patient>) cabinet.getPatients();
	        if (patients.isEmpty()) {
	            System.out.println("Aucun patient enregistré.");
	        } else {
	            System.out.println("Liste des patients :");
	            for (Patient patient : patients) {
	                System.out.println("- " + patient.getNom() + " " + patient.getPrenom());
	            }
	        }
	    }

	    private static void mettreAJourPatient(GestionCabinetMedical cabinet) {
	        Scanner scanner = new Scanner(System.in);
	        System.out.println("Entrez le nom du patient à mettre à jour :");
	        String nom = scanner.nextLine();
	        System.out.println("Entrez le prénom du patient à mettre à jour :");
	        String prenom = scanner.nextLine();

	        Patient patient = cabinet.rechercherPatient(nom, prenom);
	        if (patient == null) {
	            System.out.println("Patient non trouvé.");
	            return;
	        }

	        System.out.println("Entrez les nouvelles informations du patient :");
	        Patient nouveauPatient = saisirInformationsPatient();
	        cabinet.mettreAjourPatient(nouveauPatient);
	        System.out.println("Patient mis à jour avec succès.");
	    }

	    private static void supprimerPatient(GestionCabinetMedical cabinet) {
	        Scanner scanner = new Scanner(System.in);
	        System.out.println("Entrez le nom du patient à supprimer :");
	        String nom = scanner.nextLine();
	        System.out.println("Entrez le prénom du patient à supprimer :");
	        String prenom = scanner.nextLine();

	        Patient patient = cabinet.rechercherPatient(nom, prenom);
	        if (patient == null) {
	            System.out.println("Patient non trouvé.");
	            return;
	        }

	        cabinet.supprimerPatient(patient);
	        System.out.println("Patient supprimé avec succès.");
	    }

	    private static Patient saisirInformationsPatient() {
	        Scanner scanner = new Scanner(System.in);
	        System.out.println("Entrez le nom du patient :");
	        String nom = scanner.nextLine();
	        System.out.println("Entrez le prénom du patient :");
	        String prenom = scanner.nextLine();
	        System.out.println("Entrez le numéro de téléphone du patient :");
	        String telephone = scanner.nextLine();
	        System.out.println("Entrez les antécédents médicaux du patient (ou 'aucun') :");
	        String antecedentsMedicaux = scanner.nextLine();
	        System.out.println("Entrez les antécédents chirurgicaux du patient (ou 'aucun') :");
	        String antecedentsChirurgicaux = scanner.nextLine();
	        System.out.println("Entrez le poids du patient :");
	        double poids = Double.parseDouble(scanner.nextLine());
	        System.out.println("Entrez la taille du patient :");
	        double taille = Double.parseDouble(scanner.nextLine());
	        System.out.println("Entrez les allergies du patient (séparées par des virgules) :");
	        String[] allergiesArray = scanner.nextLine().split(",");
	        ArrayList<String> allergies = new ArrayList<>();
	        for (String allergie : allergiesArray) {
	            allergies.add(allergie.trim());
	        }
	        return new Patient(nom, prenom, telephone, antecedentsMedicaux, antecedentsChirurgicaux, poids, taille, allergies);
	    }
	}
	
	   